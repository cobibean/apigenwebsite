---
description: Visual Editor Compatibility & Prop-Driven React Rules (Builder/Storyblok/Plasmic-ready)
globs: ["app/**/*.{ts,tsx}", "src/**/*.{ts,tsx}", "sections/**/*.{ts,tsx}", "providers/**/*.{ts,tsx}", "lib/**/*.{ts,tsx}"]
alwaysApply: true
---
# Core Rules

- **Prop-driven sections only**
  - Section components must receive all content/config via **props**.
  - ❌ No data fetching, `useRouter`, `window`, or global context inside sections.
  - ✅ Data fetching happens in routes/loaders; pass results as props.

- **Links**
  - All links in sections must use components/AppLink.tsx. No direct imports of CMS/vendor link components in sections/**.

- **Blocks + Registry**
  - Render pages from an array of blocks `{ type, props, children? }`.
  - Maintain a central registry mapping `type → Component`.
  - Components that nest content must render `children` blocks via the renderer.

- **Adapter Layer**
  - Implement a `ContentSource` interface (`getPage`, `getMenu`…).
  - CMS/editor SDK usage is allowed **only** inside adapters, never in sections.
  - Provide a provider-aware rich-text helper; do not hardwire CMS rendering in sections.

- **Preview & ISR**
  - Provide `/api/preview` to enable draft mode (no cache).
  - Default to ISR for live pages; preview bypasses caching.

- **Styling & Theming**
  - Use Tailwind/CSS Modules; avoid reliance on external/global CSS from editors.
  - Expose appearance via props (e.g., `theme`, `variant`, `align`) or CSS variables.

- **Media**
  - Images use absolute URLs, include `alt`, width/height (or Next Image props).
  - Provide a single image wrapper component to standardize behavior.

- **SEO**
  - Central SEO util consumes `PageData` fields; must have fallbacks.

- **Accessibility**
  - Use semantic landmarks; visible focus states; 4.5:1+ contrast.

- **Performance**
  - Avoid blocking fetches in render; lazy-load heavy blocks.
  - Target Lighthouse ≥ 90 on staging for key pages.

- **Analytics**
  - Track with `data-block`/`data-variant` attributes; use a small event helper.

- **Editor Stubs**
  - Keep commented stubs ready for:  
    - Builder: `registerComponent` with prop schemas.  
    - Storyblok: `components` map.  
    - Plasmic: loader/init.  
  - Adapters must be swappable without touching sections.

# Danger Patterns (Fail the check)

- In `sections/**`: any of  
  - `fetch(`, `axios(`, `useSWR(`  
  - `useRouter(`, `useSearchParams(`, `window.`, `document.`  
  - `useContext(` for app state or CMS clients  
  - `import` of CMS/editor SDKs (builder/storyblok/plasmic)  
  - In sections/**: import from CMS/editor link components (e.g., @storyblok/*, @builder.io/*, @plasmicapp/*) → fail.
- Components missing sensible defaults for public props.
- Components that render without alt/dimensions for images.

# Required Files/Concepts (Warn if missing)

- `lib/registry.ts` (or equivalent mapping for blocks → components)
- `components/RenderBlocks.tsx` (or equivalent)
- `lib/content-source.ts` (ContentSource interface)
- `components/AppLink.tsx`
- Local JSON adapter (development default)
- `/api/preview` route for draft mode
- SEO utility that reads from `PageData`
- Storybook stories for each section (min/typical/max props)
- One renderer test using a sample page JSON

# Quick Page Review Checklist

- [ ] Renders entirely from blocks + registry  
- [ ] No section performs fetch/router/window access  
- [ ] SEO fields present or defaulted  
- [ ] a11y passes; images have alt + dimensions  
- [ ] Preview mode shows drafts; ISR for live

