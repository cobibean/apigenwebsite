---
description: Minimal, always-on rules + context for the Apigen site so the Cursor agent stays goal‑aligned.
globs: []
alwaysApply: true
---

# Project Context

* **Client**: Sunny @ **Apigen**
* **What we’re building**: A fast, accessible marketing site in **Next.js (App Router)** with **Tailwind + shadcn/ui (Radix)** and **Lucide**.
* **Outcome**: Ship a polished v1 that mirrors the reference IA (Home, About, Brands/Products, News, Contact.


# Tech Defaults

* **UI**: shadcn/ui components; subtle Motion only; respect `prefers-reduced-motion`.
* **Styling**: Tailwind + CSS vars for theme tokens. Avoid global CSS assumptions.
* **Links/Images**: Use `components/AppLink.tsx` and `components/AppImage.tsx` everywhere in sections.
* **SEO**: central util that reads `PageData.seo` with sane fallbacks.
* **A11y/Perf**: semantic landmarks; visible focus; ≥4.5:1 contrast; sized images; Lighthouse ≥90 on Home + one heavy page.
* **Analytics**: `data-block` and `data-variant` attributes; tiny event helper.

# Prompting Reminders (for the agent)

* Prefer **simple, composable sections** with clear props (`title`, `eyebrow`, `copy`, `items`, `cta` …). Provide defaults so the component renders without external data.
* Expose visual variants with **enum props** (`variant`, `theme`, `align`) instead of extra components.
* Keep **rich‑text** rendering behind a helper; don’t hardwire a provider.
* When unsure, choose the solution that keeps the **adapter boundary** clean and the **section API** stable.



# Project Goal (one‑liner)

“Build Apigen’s marketing site as a modular block system today, and make tomorrow’s switch to a visual editor a one‑file adapter swap—not a rebuild.”

